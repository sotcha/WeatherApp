plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId "com.sotcha.weather"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "API_KEY", "\"" + getApiKey() + "\"")
        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility versions.java
        targetCompatibility versions.java
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }


}
kapt { // for hilt
    correctErrorTypes true
}

hilt {
    enableTransformForLocalTests = true
}

dependencies {
    implementation project(':domain')
    implementation project(':data')

    implementation libraries.kotlin
    implementation libraries.androidKtx
    implementation libraries.fragmentKtx
    implementation libraries.activityKtx
    implementation libraries.supportAppCompat
    implementation libraries.multiDex
    implementation libraries.constraintLayout
    implementation libraries.swipeRefreshLayout
    implementation libraries.androidMaterial
    implementation libraries.lifecycleViewmodelKtx
    implementation libraries.lifecycleLivedataKtx
    implementation libraries.lifecycleRuntime
    implementation libraries.lifecycleCommonJava8

    implementation libraries.hiltAndroid
    kapt libraries.hiltKapt

    implementation libraries.kotlinCoroutinesCore
    implementation libraries.kotlinCoroutinesAndroid

    //Memory profiler & optimization
    debugImplementation libraries.leakCanary

    implementation libraries.glide
    kapt libraries.glideCompiler

    implementation libraries.retrofit
    implementation libraries.retrofitGsonConverter
    implementation libraries.okHttp
    implementation libraries.okHttpLoggingInterceptor

    implementation libraries.room
    implementation libraries.roomKtx
    kapt libraries.roomCompiler

    // For instrumentation tests
    androidTestImplementation libraries.hiltAndroidTesting
    kaptAndroidTest libraries.hiltKapt

    // For local unit tests
    testImplementation libraries.hiltAndroidTesting
    kaptTest libraries.hiltKapt


    testImplementation libraries.junit
    androidTestImplementation libraries.androidTestJunit
    androidTestImplementation libraries.espressoCore
}

// Store the api key to gradle.properties setting
// weather_api_key=XXXXXX
def getApiKey() {
    return project.findProperty("weather_api_key")
}
